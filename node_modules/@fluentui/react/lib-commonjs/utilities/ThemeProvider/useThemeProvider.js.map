{"version":3,"file":"useThemeProvider.js","sourceRoot":"../src/","sources":["utilities/ThemeProvider/useThemeProvider.tsx"],"names":[],"mappings":";;;AAAA,6DAAsE;AACtE,iEAAgE;AAChE,iDAA2D;AAK3D;;;GAGG;AACI,IAAM,gBAAgB,GAAG,UAC9B,KAAyB,EACzB,YAAgC;IAKhC,IAAM,KAAK,GAAG,IAAA,gCAAoB,EAAC,YAAY,EAAE,KAAK,CAAuB,CAAC;IAE9E,0BAA0B;IAC1B,IAAA,6CAAqB,EAAC,KAAK,CAAC,CAAC;IAE7B,OAAO;QACL,KAAK,OAAA;QACL,MAAM,2CAAA;KACP,CAAC;AACJ,CAAC,CAAC;AAhBW,QAAA,gBAAgB,oBAgB3B","sourcesContent":["import { renderThemeProvider as render } from './renderThemeProvider';\nimport { useThemeProviderState } from './useThemeProviderState';\nimport { getPropsWithDefaults } from '@fluentui/utilities';\nimport type { ThemeProviderProps, ThemeProviderState } from './ThemeProvider.types';\n\nimport type { JSXElement } from '@fluentui/utilities';\n\n/**\n * Returns the ThemeProvider render function and calculated state, given user input, ref, and\n * a set of default prop values.\n */\nexport const useThemeProvider = (\n  props: ThemeProviderProps,\n  defaultProps: ThemeProviderProps,\n): {\n  state: ThemeProviderState;\n  render: (state: ThemeProviderState) => JSXElement;\n} => {\n  const state = getPropsWithDefaults(defaultProps, props) as ThemeProviderState;\n\n  // Apply changes to state.\n  useThemeProviderState(state);\n\n  return {\n    state,\n    render,\n  };\n};\n"]}