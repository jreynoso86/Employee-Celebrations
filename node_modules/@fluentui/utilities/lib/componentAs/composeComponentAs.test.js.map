{"version":3,"file":"composeComponentAs.test.js","sourceRoot":"../src/","sources":["componentAs/composeComponentAs.test.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,MAAM,EAAE,MAAM,wBAAwB,CAAC;AAChD,OAAO,EAAE,kBAAkB,EAAE,MAAM,sBAAsB,CAAC;AAS1D,IAAM,IAAI,GAAuC,UAAC,KAAoB;IACpE,OAAO,2CAAiB,KAAK,CAAC,KAAK,GAAI,CAAC;AAC1C,CAAC,CAAC;AAEF,IAAM,UAAU,GAA0D,UACxE,KAAuC;IAE/B,IAAe,aAAa,GAAsB,KAAK,cAA3B,EAAK,YAAY,UAAK,KAAK,EAAzD,iBAAiD,CAAF,CAAW;IAEhE,OAAO,uCAAY,GAAG,IAAE,aAAa,CAAC,CAAC,CAAC,oBAAC,aAAa,eAAK,YAAY,EAAI,CAAC,CAAC,CAAC,IAAI,CAAO,CAAC;AAC5F,CAAC,CAAC;AAEF,IAAM,UAAU,GAA0D,UACxE,KAAuC;IAE/B,IAAe,aAAa,GAAsB,KAAK,cAA3B,EAAK,YAAY,UAAK,KAAK,EAAzD,iBAAiD,CAAF,CAAW;IAEhE,OAAO,uCAAY,GAAG,IAAE,aAAa,CAAC,CAAC,CAAC,oBAAC,aAAa,eAAK,YAAY,EAAI,CAAC,CAAC,CAAC,IAAI,CAAO,CAAC;AAC5F,CAAC,CAAC;AAEF,QAAQ,CAAC,oBAAoB,EAAE;IAC7B,EAAE,CAAC,2BAA2B,EAAE;QAC9B,IAAM,kBAAkB,GAAG,kBAAkB,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;QAChE,IAAM,SAAS,GAAG,MAAM,CAAC,oBAAC,kBAAkB,IAAC,KAAK,EAAC,MAAM,GAAG,CAAC,CAAC;QAE9D,MAAM,CAAC,SAAS,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,eAAe,EAAE,CAAC;IAC3D,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,8CAA8C,EAAE;QACjD,IAAM,sBAAsB,GAAG,kBAAkB,CAAC,UAAU,EAAE,kBAAkB,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC,CAAC;QACpG,IAAM,SAAS,GAAG,MAAM,CAAC,oBAAC,sBAAsB,IAAC,KAAK,EAAC,MAAM,GAAG,CAAC,CAAC;QAElE,MAAM,CAAC,SAAS,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,eAAe,EAAE,CAAC;IAC3D,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,+DAA+D,EAAE;QAClE,IAAM,iBAAiB,GAAG,kBAAkB,CAAC,UAAU,EAAE,UAAU,CAAC,CAAC;QAErE,IAAM,SAAS,GAAG,MAAM,CAAC,oBAAC,iBAAiB,IAAC,KAAK,EAAC,MAAM,EAAC,aAAa,EAAE,IAAI,GAAI,CAAC,CAAC;QAElF,MAAM,CAAC,SAAS,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,eAAe,EAAE,CAAC;IAC3D,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,+BAA+B,EAAE;QAClC,IAAM,iBAAiB,GAAG,kBAAkB,CAAC,UAAU,EAAE,UAAU,CAAC,CAAC;QAErE,IAAM,SAAS,GAAG,MAAM,CAAC,oBAAC,iBAAiB,IAAC,KAAK,EAAC,MAAM,GAAG,CAAC,CAAC;QAE7D,MAAM,CAAC,SAAS,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,eAAe,EAAE,CAAC;IAC3D,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,gDAAgD,EAAE;QACnD,IAAM,iBAAiB,GAAG,kBAAkB,CAAC,UAAU,EAAE,UAAU,CAAC,CAAC;QAErE,MAAM,CAAC,kBAAkB,CAAC,UAAU,EAAE,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;IAC7E,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import * as React from 'react';\nimport { render } from '@testing-library/react';\nimport { composeComponentAs } from './composeComponentAs';\nimport type { IComponentAsProps } from '../IComponentAs';\n\nimport type { JSXElement } from '../jsx';\n\ninterface IExampleProps {\n  value: string;\n}\n\nconst Base: React.ComponentType<IExampleProps> = (props: IExampleProps): JSXElement | null => {\n  return <div data-value={props.value} />;\n};\n\nconst DecoratorA: React.ComponentType<IComponentAsProps<IExampleProps>> = (\n  props: IComponentAsProps<IExampleProps>,\n): JSXElement | null => {\n  const { defaultRender: DefaultRender, ...exampleProps } = props;\n\n  return <div data-a=\"a\">{DefaultRender ? <DefaultRender {...exampleProps} /> : null}</div>;\n};\n\nconst DecoratorB: React.ComponentType<IComponentAsProps<IExampleProps>> = (\n  props: IComponentAsProps<IExampleProps>,\n): JSXElement | null => {\n  const { defaultRender: DefaultRender, ...exampleProps } = props;\n\n  return <div data-b=\"b\">{DefaultRender ? <DefaultRender {...exampleProps} /> : null}</div>;\n};\n\ndescribe('composeComponentAs', () => {\n  it('passes Base to DecoratorA', () => {\n    const DecoratorAWithBase = composeComponentAs(DecoratorA, Base);\n    const component = render(<DecoratorAWithBase value=\"test\" />);\n\n    expect(component.container.firstChild).toMatchSnapshot();\n  });\n\n  it('passes Base to DecoratorB through DecoratorA', () => {\n    const DecoratorAAndBWithBase = composeComponentAs(DecoratorA, composeComponentAs(DecoratorB, Base));\n    const component = render(<DecoratorAAndBWithBase value=\"test\" />);\n\n    expect(component.container.firstChild).toMatchSnapshot();\n  });\n\n  it('passes Base as defaultRender to DecoratorB through DecoratorA', () => {\n    const DecoratorAAroundB = composeComponentAs(DecoratorA, DecoratorB);\n\n    const component = render(<DecoratorAAroundB value=\"test\" defaultRender={Base} />);\n\n    expect(component.container.firstChild).toMatchSnapshot();\n  });\n\n  it('renders without defaultRender', () => {\n    const DecoratorAAroundB = composeComponentAs(DecoratorA, DecoratorB);\n\n    const component = render(<DecoratorAAroundB value=\"test\" />);\n\n    expect(component.container.firstChild).toMatchSnapshot();\n  });\n\n  it('avoids recomposing already-composed components', () => {\n    const DecoratorAAroundB = composeComponentAs(DecoratorA, DecoratorB);\n\n    expect(composeComponentAs(DecoratorA, DecoratorB)).toBe(DecoratorAAroundB);\n  });\n});\n"]}