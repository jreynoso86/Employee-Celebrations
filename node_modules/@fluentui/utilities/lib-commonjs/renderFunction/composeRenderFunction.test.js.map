{"version":3,"file":"composeRenderFunction.test.js","sourceRoot":"../src/","sources":["renderFunction/composeRenderFunction.test.tsx"],"names":[],"mappings":";;AAAA,6BAA+B;AAC/B,gDAAgD;AAChD,iEAAgE;AAShE,IAAM,UAAU,GAAG,UAAC,KAAoB;IACtC,OAAO,2CAAiB,KAAK,CAAC,KAAK,GAAI,CAAC;AAC1C,CAAC,CAAC;AAEF,IAAM,gBAAgB,GAAG,UAAC,KAAqB,EAAE,aAA8C;IAC7F,IAAI,CAAC,KAAK,EAAE,CAAC;QACX,OAAO,IAAI,CAAC;IACd,CAAC;IAED,OAAO,uCAAY,GAAG,IAAE,aAAa,CAAC,CAAC,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAO,CAAC;AAC7E,CAAC,CAAC;AAEF,IAAM,gBAAgB,GAAG,UAAC,KAAqB,EAAE,aAA8C;IAC7F,IAAI,CAAC,KAAK,EAAE,CAAC;QACX,OAAO,IAAI,CAAC;IACd,CAAC;IAED,OAAO,uCAAY,GAAG,IAAE,aAAa,CAAC,CAAC,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAO,CAAC;AAC7E,CAAC,CAAC;AAEF,QAAQ,CAAC,oBAAoB,EAAE;IAC7B,EAAE,CAAC,2BAA2B,EAAE;QAC9B,IAAM,wBAAwB,GAAG,IAAA,6CAAqB,EAAC,gBAAgB,EAAE,UAAU,CAAC,CAAC;QAE7E,IAAA,SAAS,GAAK,IAAA,cAAM,EAAC,0CAAG,wBAAwB,CAAC,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC,CAAI,CAAC,UAA/D,CAAgE;QACjF,MAAM,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,eAAe,EAAE,CAAC;IACjD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,8CAA8C,EAAE;QACjD,IAAM,4BAA4B,GAAG,IAAA,6CAAqB,EACxD,gBAAgB,EAChB,IAAA,6CAAqB,EAAC,gBAAgB,EAAE,UAAU,CAAC,CACpD,CAAC;QAEM,IAAA,SAAS,GAAK,IAAA,cAAM,EAAC,0CAAG,4BAA4B,CAAC,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC,CAAI,CAAC,UAAnE,CAAoE;QACrF,MAAM,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,eAAe,EAAE,CAAC;IACjD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,+DAA+D,EAAE;QAClE,IAAM,uBAAuB,GAAG,IAAA,6CAAqB,EAAC,gBAAgB,EAAE,gBAAgB,CAAC,CAAC;QAElF,IAAA,SAAS,GAAK,IAAA,cAAM,EAAC,0CAAG,uBAAuB,CAAC,EAAE,KAAK,EAAE,MAAM,EAAE,EAAE,UAAU,CAAC,CAAI,CAAC,UAA1E,CAA2E;QAC5F,MAAM,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,eAAe,EAAE,CAAC;IACjD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,+BAA+B,EAAE;QAClC,IAAM,uBAAuB,GAAG,IAAA,6CAAqB,EAAC,gBAAgB,EAAE,gBAAgB,CAAC,CAAC;QAElF,IAAA,SAAS,GAAK,IAAA,cAAM,EAAC,0CAAG,uBAAuB,CAAC,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC,CAAI,CAAC,UAA9D,CAA+D;QAChF,MAAM,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,eAAe,EAAE,CAAC;IACjD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,gDAAgD,EAAE;QACnD,IAAM,uBAAuB,GAAG,IAAA,6CAAqB,EAAC,gBAAgB,EAAE,gBAAgB,CAAC,CAAC;QAE1F,MAAM,CAAC,IAAA,6CAAqB,EAAC,gBAAgB,EAAE,gBAAgB,CAAC,CAAC,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC;IAClG,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import * as React from 'react';\nimport { render } from '@testing-library/react';\nimport { composeRenderFunction } from './composeRenderFunction';\nimport type { IRenderFunction } from '../IRenderFunction';\n\nimport type { JSXElement } from '../jsx';\n\ninterface IExampleProps {\n  value: string;\n}\n\nconst renderBase = (props: IExampleProps): JSXElement | null => {\n  return <div data-value={props.value} />;\n};\n\nconst renderDecoratorA = (props?: IExampleProps, defaultRender?: IRenderFunction<IExampleProps>): JSXElement | null => {\n  if (!props) {\n    return null;\n  }\n\n  return <div data-a=\"a\">{defaultRender ? defaultRender(props) : null}</div>;\n};\n\nconst renderDecoratorB = (props?: IExampleProps, defaultRender?: IRenderFunction<IExampleProps>): JSXElement | null => {\n  if (!props) {\n    return null;\n  }\n\n  return <div data-b=\"b\">{defaultRender ? defaultRender(props) : null}</div>;\n};\n\ndescribe('composeComponentAs', () => {\n  it('passes Base to DecoratorA', () => {\n    const renderDecoratorAWithBase = composeRenderFunction(renderDecoratorA, renderBase);\n\n    const { container } = render(<>{renderDecoratorAWithBase({ value: 'test' })}</>);\n    expect(container.firstChild).toMatchSnapshot();\n  });\n\n  it('passes Base to DecoratorB through DecoratorA', () => {\n    const renderDecoratorAAndBWithBase = composeRenderFunction(\n      renderDecoratorA,\n      composeRenderFunction(renderDecoratorB, renderBase),\n    );\n\n    const { container } = render(<>{renderDecoratorAAndBWithBase({ value: 'test' })}</>);\n    expect(container.firstChild).toMatchSnapshot();\n  });\n\n  it('passes Base as defaultRender to DecoratorB through DecoratorA', () => {\n    const renderDecoratorAAroundB = composeRenderFunction(renderDecoratorA, renderDecoratorB);\n\n    const { container } = render(<>{renderDecoratorAAroundB({ value: 'test' }, renderBase)}</>);\n    expect(container.firstChild).toMatchSnapshot();\n  });\n\n  it('renders without defaultRender', () => {\n    const renderDecoratorAAroundB = composeRenderFunction(renderDecoratorA, renderDecoratorB);\n\n    const { container } = render(<>{renderDecoratorAAroundB({ value: 'test' })}</>);\n    expect(container.firstChild).toMatchSnapshot();\n  });\n\n  it('avoids recomposing already-composed components', () => {\n    const renderDecoratorAAroundB = composeRenderFunction(renderDecoratorA, renderDecoratorB);\n\n    expect(composeRenderFunction(renderDecoratorA, renderDecoratorB)).toBe(renderDecoratorAAroundB);\n  });\n});\n"]}