{"version":3,"file":"safeRequestAnimationFrame.test.js","sourceRoot":"../src/","sources":["safeRequestAnimationFrame.test.tsx"],"names":[],"mappings":";;;IAMA,QAAQ,CAAC,2BAA2B,EAAE;QACpC,IAAI,SAAS,GAAG,KAAK,CAAC;QAEtB;YAAkB,+BAAe;YAG/B,aAAY,KAAS;gBACnB,YAAA,MAAK,YAAC,KAAK,CAAC,SAAC;gBAHP,UAAI,GAAG,IAAA,qDAAyB,EAAC,KAAI,CAAC,CAAC;;YAI/C,CAAC;YAEM,oBAAM,GAAb;gBACE,OAAO,yCAAgB,CAAC;YAC1B,CAAC;YAEM,+BAAiB,GAAxB;gBACE,IAAI,CAAC,IAAI,CAAC,cAAM,OAAA,CAAC,SAAS,GAAG,IAAI,CAAC,EAAlB,CAAkB,CAAC,CAAC;YACtC,CAAC;YACH,UAAC;QAAD,CAAC,AAdD,CAAkB,KAAK,CAAC,SAAS,GAchC;QAED,UAAU,CAAC;YACT,SAAS,GAAG,KAAK,CAAC;YAClB,IAAI,CAAC,aAAa,EAAE,CAAC;QACvB,CAAC,CAAC,CAAC;QAEH,SAAS,CAAC;YACR,IAAI,CAAC,oBAAoB,EAAE,CAAC;YAC5B,IAAI,CAAC,aAAa,EAAE,CAAC;QACvB,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,6BAA6B,EAAE;YAChC,IAAM,SAAS,GAAG,IAAA,cAAM,EAAC,oBAAC,GAAG,OAAG,CAAC,CAAC;YAElC,MAAM,CAAC,SAAS,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;YAEjC,IAAI,CAAC,oBAAoB,EAAE,CAAC;YAE5B,MAAM,CAAC,SAAS,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YAChC,SAAS,CAAC,OAAO,EAAE,CAAC;QACtB,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,oCAAoC,EAAE;YACvC,IAAM,SAAS,GAAG,IAAA,cAAM,EAAC,oBAAC,GAAG,OAAG,CAAC,CAAC;YAElC,MAAM,CAAC,SAAS,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;YAEjC,SAAS,CAAC,OAAO,EAAE,CAAC;YAEpB,IAAI,CAAC,oBAAoB,EAAE,CAAC;YAE5B,MAAM,CAAC,SAAS,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QACnC,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC","sourcesContent":["import * as React from 'react';\nimport { safeRequestAnimationFrame } from './safeRequestAnimationFrame';\nimport { render } from '@testing-library/react';\n\nimport type { JSXElement } from './jsx';\n\ndescribe('safeRequestAnimationFrame', () => {\n  let rafCalled = false;\n\n  class Foo extends React.Component {\n    private _raf = safeRequestAnimationFrame(this);\n\n    constructor(props: {}) {\n      super(props);\n    }\n\n    public render(): JSXElement {\n      return <div>Hello</div>;\n    }\n\n    public componentDidMount(): void {\n      this._raf(() => (rafCalled = true));\n    }\n  }\n\n  beforeEach(() => {\n    rafCalled = false;\n    jest.useFakeTimers();\n  });\n\n  afterEach(() => {\n    jest.runOnlyPendingTimers();\n    jest.useRealTimers();\n  });\n\n  it('can request animation frame', () => {\n    const component = render(<Foo />);\n\n    expect(rafCalled).toEqual(false);\n\n    jest.runOnlyPendingTimers();\n\n    expect(rafCalled).toEqual(true);\n    component.unmount();\n  });\n\n  it('can cancel request animation frame', () => {\n    const component = render(<Foo />);\n\n    expect(rafCalled).toEqual(false);\n\n    component.unmount();\n\n    jest.runOnlyPendingTimers();\n\n    expect(rafCalled).toEqual(false);\n  });\n});\n"]}