{"version":3,"file":"BaseComponent.test.js","sourceRoot":"../src/","sources":["BaseComponent.test.tsx"],"names":[],"mappings":";;;IAMA,QAAQ,CAAC,eAAe,EAAE;QACxB,EAAE,CAAC,kBAAkB,EAAE;YACrB;gBAAkB,+BAAqB;gBAAvC;;gBAWA,CAAC;gBARQ,oBAAM,GAAb;oBACE,OAAO,CACL;wBACE,0CAA0C;wBAC1C,GAAG,EAAE,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,GAC7B,CACH,CAAC;gBACJ,CAAC;gBACH,UAAC;YAAD,CAAC,AAXD,CAAkB,6BAAa,GAW9B;YAEO,IAAA,SAAS,GAAK,IAAA,cAAM,EAAC,oBAAC,GAAG,OAAG,CAAC,UAApB,CAAqB;YACtC,IAAM,SAAS,GAAG,SAAS,CAAC,UAAyB,CAAC;YAEtD,MAAM,CAAC,SAAS,CAAC,CAAC,UAAU,EAAE,CAAC;QACjC,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC","sourcesContent":["import * as React from 'react';\nimport { render } from '@testing-library/react';\nimport { BaseComponent } from './BaseComponent';\n\nimport type { JSXElement } from './jsx';\n\ndescribe('BaseComponent', () => {\n  it('can resolve refs', () => {\n    class Foo extends BaseComponent<{}, {}> {\n      public root!: HTMLElement;\n\n      public render(): JSXElement {\n        return (\n          <div\n            // @ts-expect-error - react 18 types issue\n            ref={this._resolveRef('root')}\n          />\n        );\n      }\n    }\n\n    const { container } = render(<Foo />);\n    const component = container.firstChild as HTMLElement;\n\n    expect(component).toBeTruthy();\n  });\n});\n"]}