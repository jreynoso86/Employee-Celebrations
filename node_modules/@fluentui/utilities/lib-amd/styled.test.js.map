{"version":3,"file":"styled.test.js","sourceRoot":"../src/","sources":["styled.test.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { act, render } from '@testing-library/react';\nimport { styled } from './styled';\nimport { Customizer } from './customizations/Customizer';\nimport { Stylesheet, InjectionMode, mergeStyles } from '@fluentui/merge-styles';\nimport { classNamesFunction } from './classNamesFunction';\nimport { Customizations } from './customizations/Customizations';\nimport type { IStyle, IStyleFunction, IStyleFunctionOrObject } from '@fluentui/merge-styles';\n\nimport type { JSXElement } from './jsx';\n\ninterface ITestStyles {\n  root: IStyle;\n}\ninterface ITestProps {\n  cool?: boolean;\n  styles?: IStyleFunctionOrObject<{}, ITestStyles>;\n  children?: React.ReactNode;\n}\n\nlet _lastProps: ITestProps | undefined;\nlet _renderCount: number;\nlet _styleEval: number;\nlet component: ReturnType<typeof render> | undefined;\nlet lastStylesInBaseComponent: IStyleFunctionOrObject<{}, ITestStyles> | undefined;\n\nconst getClassNames = classNamesFunction<{}, ITestStyles>();\n\nclass TestBase extends React.Component<ITestProps> {\n  public constructor(props: ITestProps) {\n    super(props);\n  }\n\n  public render(): JSXElement {\n    _renderCount++;\n\n    _lastProps = this.props;\n\n    const classNames = getClassNames(this.props.styles, { cool: this.props.cool });\n    lastStylesInBaseComponent = this.props.styles;\n\n    return <div className={classNames.root}>{this.props.children}</div>;\n  }\n}\n\nclass ShortCircuit extends React.PureComponent<{ children?: React.ReactNode }> {\n  public render(): JSXElement {\n    return <div>{this.props.children}</div>;\n  }\n}\n\nconst TestStyles = (props: ITestProps): ITestStyles => {\n  _styleEval++;\n  return {\n    root: {\n      background: props.cool ? 'blue' : 'red',\n    },\n  };\n};\n\nconst Test = styled<ITestProps, {}, ITestStyles>(TestBase, TestStyles, undefined, { scope: 'Test' });\n\ndescribe('styled', () => {\n  beforeEach(() => {\n    _lastProps = undefined;\n    _renderCount = 0;\n    _styleEval = 0;\n\n    Stylesheet.getInstance().setConfig({\n      injectionMode: InjectionMode.none,\n    });\n    Stylesheet.getInstance().reset();\n  });\n\n  afterEach(() => {\n    act(() => {\n      component?.unmount();\n      component = undefined;\n    });\n\n    lastStylesInBaseComponent = undefined;\n  });\n\n  it('can create pure components', () => {\n    let renderCount = 0;\n    const Component = () => {\n      renderCount++;\n      return <div />;\n    };\n    const styles = () => ({});\n    const Comp = styled(Component, styles);\n    const PureComp = styled(Component, styles, undefined, undefined, true);\n    const App = () => {\n      return (\n        <div>\n          <Comp />\n          <PureComp />\n        </div>\n      );\n    };\n\n    act(() => {\n      component = render(<App />);\n    });\n\n    expect(renderCount).toEqual(2);\n\n    act(() => {\n      component!.rerender(<App data-foo=\"1\" />);\n    });\n\n    expect(renderCount).toEqual(3);\n  });\n\n  it('renders base styles (background red)', () => {\n    const wrapper = render(<Test />);\n    // Test that defaults are the base styles (red)\n    expect(wrapper.container.firstChild).toMatchSnapshot();\n  });\n\n  it('allows user overrides (background green)', () => {\n    const wrapper = render(<Test styles={{ root: { background: 'green' } }} />);\n    expect(wrapper.container.firstChild).toMatchSnapshot();\n    wrapper.unmount();\n  });\n\n  it('does not create any new closured functions', () => {\n    let _firstProps: ITestProps | undefined;\n\n    act(() => {\n      component = render(<Test />);\n    });\n\n    _firstProps = _lastProps;\n    expect(_renderCount).toEqual(1);\n\n    act(() => {\n      component!.rerender(<Test cool={true} />);\n    });\n\n    expect(_renderCount).toEqual(2);\n    expect(_firstProps).not.toBe(_lastProps);\n\n    if (_firstProps) {\n      // Validate that all functions and objects are the same instances as before.\n      for (let propName in _firstProps) {\n        if (_firstProps.hasOwnProperty(propName)) {\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          const propValue = (_firstProps as any)[propName];\n\n          if (typeof propValue === 'function' || typeof propValue === 'object') {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            expect(propValue).toBe((_lastProps as any)[propName]);\n          }\n        }\n      }\n    }\n  });\n\n  it('allows for contextual overrides (background yellow)', () => {\n    const wrapper = render(\n      <Customizer\n        scopedSettings={{\n          Test: {\n            styles: {\n              root: {\n                background: 'yellow',\n              },\n            },\n          },\n        }}\n      >\n        <Test />\n      </Customizer>,\n    );\n    expect(wrapper.container.firstChild).toMatchSnapshot();\n    wrapper.unmount();\n  });\n\n  it('allows for contextual overrides mixed under user overrides (background yellow, color red)', () => {\n    const wrapper = render(\n      <Customizer\n        scopedSettings={{\n          Test: {\n            styles: {\n              root: {\n                background: 'yellow',\n              },\n            },\n          },\n        }}\n      >\n        <Test styles={{ root: { color: 'red' } }} />\n      </Customizer>,\n    );\n    expect(wrapper.container.firstChild).toMatchSnapshot();\n    wrapper.unmount();\n  });\n\n  it('can process style props (background blue)', () => {\n    const wrapper = render(<Test cool />);\n    expect(wrapper.container.firstChild).toMatchSnapshot();\n    wrapper.unmount();\n  });\n\n  it('can wrap components and merge styling objects for all', () => {\n    const TestInner = styled<ITestProps, {}, ITestStyles>(Test, { root: { color: 'green' } }, undefined);\n    const TestOuter = styled<ITestProps, {}, ITestStyles>(TestInner, { root: { lineHeight: '19px' } }, undefined);\n    const wrapper = render(<TestOuter cool />);\n    expect(wrapper.container.firstChild).toMatchSnapshot();\n    wrapper.unmount();\n  });\n\n  it('can wrap components and merge styling functions for all', () => {\n    const TestInner = styled<ITestProps, {}, ITestStyles>(Test, () => ({ root: { color: 'green' } }), undefined);\n    const TestOuter = styled<ITestProps, {}, ITestStyles>(\n      TestInner,\n      () => ({ root: { lineHeight: '29px' } }),\n      undefined,\n    );\n    const wrapper = render(<TestOuter cool />);\n    expect(wrapper.container.firstChild).toMatchSnapshot();\n    wrapper.unmount();\n  });\n\n  it('gives wrapped styles object priority', () => {\n    const TestWrapped = styled<ITestProps, {}, ITestStyles>(Test, { root: { background: 'grey' } }, undefined);\n    const wrapper = render(<TestWrapped cool />);\n    expect(wrapper.container.firstChild).toMatchSnapshot();\n    wrapper.unmount();\n  });\n\n  it('gives wrapped styles function priority', () => {\n    const TestWrapped = styled<ITestProps, {}, ITestStyles>(Test, () => ({ root: { background: 'grey' } }), undefined);\n    const wrapper = render(<TestWrapped cool />);\n    expect(wrapper.container.firstChild).toMatchSnapshot();\n    wrapper.unmount();\n  });\n\n  it('gives styles object user prop priority', () => {\n    const TestWrapped = styled<ITestProps, {}, ITestStyles>(Test, { root: { background: 'grey' } }, undefined);\n    const wrapper = render(<TestWrapped cool styles={{ root: { background: 'purple' } }} />);\n    expect(wrapper.container.firstChild).toMatchSnapshot();\n    wrapper.unmount();\n  });\n\n  it('gives styles function user prop priority', () => {\n    const TestWrapped = styled<ITestProps, {}, ITestStyles>(Test, () => ({ root: { background: 'grey' } }), undefined);\n    const wrapper = render(<TestWrapped cool styles={{ root: { background: 'purple' } }} />);\n    expect(wrapper.container.firstChild).toMatchSnapshot();\n    wrapper.unmount();\n  });\n\n  it('respects styles arg', () => {\n    const defaultStyles = () =>\n      mergeStyles({\n        backgroundColor: 'red',\n      });\n\n    const greenStyles = () =>\n      mergeStyles({\n        backgroundColor: 'green',\n      });\n\n    const DefaultPanel = (props: ITestProps) => {\n      const { styles = defaultStyles } = props;\n      const className = (styles as IStyleFunction<{}, {}>)(props) as string;\n      return <div className={className}>{props.children}</div>;\n    };\n\n    const StyledPanel = styled<{}, {}, {}>(DefaultPanel, greenStyles);\n\n    const wrapper = render(\n      <div>\n        <DefaultPanel>Panel1</DefaultPanel>\n        <StyledPanel>Panel2</StyledPanel>\n      </div>,\n    );\n    expect(wrapper.container.firstChild).toMatchSnapshot();\n    wrapper.unmount();\n  });\n\n  it('respects styles type', (done: () => undefined) => {\n    const defaultStyles = { root: { backgroundColor: 'red' } };\n\n    const Component = (props: ITestProps) => {\n      expect((props.styles as IStyleFunction<{}, {}>)(props)).toEqual(defaultStyles);\n      done();\n      return null;\n    };\n\n    const StyledComponent = styled(Component, defaultStyles);\n\n    const wrapper = render(<StyledComponent />);\n    expect(wrapper.container.firstChild).toMatchSnapshot();\n    wrapper.unmount();\n  });\n\n  it('can re-render on customization mutations', () => {\n    const wrapper = render(<Test />);\n    expect(_renderCount).toEqual(1);\n    act(() => {\n      Customizations.applySettings({ theme: { palette: { themePrimary: 'red' } } });\n    });\n    expect(_renderCount).toEqual(2);\n    wrapper.unmount();\n  });\n\n  it('can re-render the minimal times when nesting', () => {\n    const wrapper = render(\n      <Test>\n        <Test />\n        <Test />\n      </Test>,\n    );\n    expect(_renderCount).toEqual(3);\n    act(() => {\n      Customizations.applySettings({ theme: { palette: { themePrimary: 'red' } } });\n    });\n    expect(_renderCount).toEqual(6);\n    wrapper.unmount();\n  });\n\n  it('can re-render the minimal times when nesting and in a Customizer', () => {\n    const wrapper = render(\n      <Customizer>\n        <Test />\n      </Customizer>,\n    );\n    expect(_renderCount).toEqual(1);\n    act(() => {\n      Customizations.applySettings({ theme: { palette: { themePrimary: 'red' } } });\n    });\n    expect(_renderCount).toEqual(2);\n    wrapper.unmount();\n  });\n\n  it('can re-render when customized styles change', () => {\n    act(() => {\n      component = render(<Test />);\n    });\n\n    expect(_styleEval).toEqual(1);\n\n    act(() => {\n      component!.rerender(<Test data-foo={1} />);\n    });\n\n    expect(_styleEval).toEqual(1);\n    component!.unmount();\n  });\n\n  it('can re-render the minimal times when inside of a pure component', () => {\n    const wrapper = render(\n      <Customizer>\n        <Test>\n          <ShortCircuit>\n            <Test />\n          </ShortCircuit>\n        </Test>\n      </Customizer>,\n    );\n    expect(_renderCount).toEqual(2);\n    act(() => {\n      Customizations.applySettings({ theme: { palette: { themePrimary: 'red' } } });\n    });\n    expect(_renderCount).toEqual(4);\n    wrapper.unmount();\n  });\n\n  it('will not re-render if styles have not changed', () => {\n    let firstStylesProp;\n\n    act(() => {\n      component = render(<Test styles={{ root: { background: 'red' } }} />);\n      firstStylesProp = lastStylesInBaseComponent;\n    });\n\n    expect(_renderCount).toEqual(1);\n\n    act(() => {\n      component!.rerender(<Test cool={true} styles={{ root: { background: 'red' } }} />);\n    });\n\n    expect(_renderCount).toEqual(2);\n    // With react-test-renderer, object identity may change but the content is equivalent\n    expect(JSON.stringify(firstStylesProp)).toBe(JSON.stringify(lastStylesInBaseComponent));\n  });\n});\n"]}